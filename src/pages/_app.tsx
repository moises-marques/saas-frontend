// frontend/src/pages/_app.tsx
import '../styles/globals.css'
import type { AppProps } from 'next/app'
import { useRouter } from 'next/router'

export default function App({ Component, pageProps }: AppProps) {
  const router = useRouter()

  // Se a rota for '/login' ou a raiz '/', o Layout N√ÉO deve ser aplicado.
  // Voc√™ j√° estava fazendo essa checagem corretamente.
  if (['/login', '/register', '/'].includes(router.pathname)) {
    // üî• Se for Login, apenas retorna o componente (Login.tsx) sem NADA.
    return <Component {...pageProps} />
  }

  // Para todas as outras p√°ginas (Dashboard, Clients, etc.):
  // O componente renderizado (ex: DashboardPage) j√° vai ter o <Layout> dentro dele!
  // ENT√ÉO, N√ÉO ENVOLVA-O AQUI NOVAMENTE!
  
  // A duplica√ß√£o acontece porque VOC√ä ESTAVA RETORNANDO:
  // <Layout><DashboardPage/></Layout>
  // E o DashboardPage era: <Layout>Conte√∫do</Layout>
  
  // Agora, apenas retorne o componente da p√°gina.
  return <Component {...pageProps} /> 
  
  // NOTA: Se voc√™ decidir mais tarde que o DashboardPage N√ÉO deve ter o <Layout>
  // (solu√ß√£o ideal), a√≠ sim, voc√™ voltaria o <Layout> aqui no _app.tsx, como 
  // sugerido na resposta anterior. Mas por enquanto, para funcionar:
  
  /* C√ìDIGO ANTERIOR QUE CAUSAVA DUPLICA√á√ÉO:
  return (
    <Layout>
      <Component {...pageProps} />
    </Layout>
  )
  */
}